services:
  # Backend PHP service (Symfony)
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/var/www/html
      - ./backend/vendor:/var/www/html/vendor:delegated
    depends_on:
      - database
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-15}&charset=${POSTGRES_CHARSET:-utf8}
      APP_ENV: "${APP_ENV:-dev}"
  
  # Nginx service for Symfony
  nginx:
    container_name: tandem-nginx
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    restart: unless-stopped
  
  # Database service (PostgreSQL)
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    ports:
      - "${DB_PORT:-5432}:5432"

  # Database admin interface
  adminer:
    image: adminer
    restart: always
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DESIGN: dark
      ADMINER_DEFAULT_SERVER: database

  # Frontend service (Nuxt.js)
  frontend:
    image: node:lts-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules # Prevent host node_modules from being mounted
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    command: sh -c "npm install && npm run dev"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - API_BASE=http://localhost/api

volumes:
  caddy_data:
  caddy_config:
  database_data:
