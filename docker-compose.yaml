services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    command: npm run dev -- --host
    networks:
      - app

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "1337:1337"
    volumes:
      - ./backend:/srv/app
      - /srv/app/node_modules
      - /srv/app/.cache
      - /srv/app/build
    environment:
      NODE_ENV: development
      DATABASE_CLIENT: postgres
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: app
      DATABASE_USERNAME: user
      DATABASE_PASSWORD: pass
      DATABASE_SSL: "false"
    depends_on:
      - db
    networks:
      - app

  db:
    image: postgres
    container_name: db
    restart: always
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app
  
  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - app

volumes:
  db-data:

networks:
  app:
